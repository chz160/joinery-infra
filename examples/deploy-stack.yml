# Example Docker Compose stack deployment workflow
# Copy this file to .github/workflows/deploy-stack.yml in the joinery-infra repository

name: Deploy Joinery Stack

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - prod

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout infrastructure repo
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      
      - name: Pull latest application images
        run: |
          # Pull latest images built by application repositories
          docker-compose pull
      
      - name: Deploy stack
        run: |
          # Deploy the complete Joinery stack
          docker-compose up -d
          
          # Wait for services to be ready
          sleep 30
          
      - name: Verify deployment
        run: |
          # Check running services
          docker-compose ps
          
          # Basic health checks
          curl -f http://localhost:80/health || echo "Web service not ready"
          curl -f http://localhost:5256/health || echo "API service not ready"
          
      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Docker Compose Logs ==="
          docker-compose logs
          
      - name: Cleanup on failure
        if: failure()
        run: |
          docker-compose down