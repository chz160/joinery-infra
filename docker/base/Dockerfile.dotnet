# Multi-stage Dockerfile for .NET 8 Web API applications
# Stage 1: Build environment
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy csproj files first for better Docker layer caching
COPY *.csproj ./
RUN dotnet restore

# Copy source code and build
COPY . .
RUN dotnet build -c Release -o /app/build

# Stage 2: Publish
FROM build AS publish
RUN dotnet publish -c Release -o /app/publish --no-restore

# Stage 3: Runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS final

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user
RUN addgroup -g 1001 -S dotnet && \
    adduser -S joinery -u 1001 -G dotnet

WORKDIR /app

# Copy published application
COPY --from=publish --chown=joinery:dotnet /app/publish .

# Switch to non-root user
USER joinery

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8080/health || curl -f http://localhost:5000/health || exit 1

# Expose ports
EXPOSE 8080
EXPOSE 5000

ENTRYPOINT ["dotnet"]